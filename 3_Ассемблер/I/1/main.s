.data /*будем помещать в сегмент данных*/
aa_st: /*метка структуры*/
    .long 1980
    .byte 'T'
    .short 8
    .short 4
    .string "Gale\n"
    .set aa_st_name_len, . - aa_st - 9
    
.global hello_str /*делаем метку глобальной (доступной снаруже)*/
hello_str: /*метка для доступа к строке*/
    .string "Привет, Мир!\n"  /*строка*/
    .set hello_str_length, . - hello_str - 1 /*длина строки (из знаения текущего адреса в этом месте "." вычитаем адрес начала строки, еще пыкидываем нулевой символ)*/

.section .rodata /*не изменяемая секция данных*/     
other_str: /*метка для доступа к строке*/
    .string "Ну те, на!\n" /*размечаем в области данных строку*/
    .set other_str_length, . - other_str - 1 /*длина строки*/

.bss /*секция не инициализированных символов*/
long_val:
    .space 4 /*4 4 байта для метки long_val*/
buf:
    .space 1024 , 0  /*1024 байта для метки buf (будет заполнена нулями)*/

.text /*будем помещать в сегмент кода*/

.globl main             /*main - глобальный символ, видимый за пределами этого файла*/
.type main, @function   /*задаем тип для main, что это функция, а не данные*/
main:      /*функция*/
    movl $4, %eax                /*записываем число 4 (номер системного вызова write) в базовый регистр промежуточных результатов*/
    movl $1, %ebx                /*(первый параметр write) записываем число 1 (номер дескриптора stdout)      в базовый регистр хранящий адрес на объект памяти*/
    movl $hello_str, %ecx        /*(второй параметр write) записываем строку                                  в базовый регистр хранящий счетчик*/
    movl $hello_str_length, %edx /*(третий параметр write) записываем длину строки                            в базовый регистр хранящий промежуточные результаты*/
    
    int $0x80 /*вызываем прерывание*/

    movl $4, %eax /*номер вызова write*/
    movl $1, %ebx /*первый параметр write (писать будем в stdout)*/
    movl $other_str, %ecx /*второй параметр (писать будем из строки)*/
    movl $other_str_length, %edx /*третий параметр (сколько будем писать)*/
    int $0x80 /*прерывание (кторое вызовет запись)*/
    
    movl $4, %eax /*номер вызова write*/
    movl $1, %ebx /*первый параметр write (писать будем в stdout)*/
    movl $aa_st+9, %ecx /*второй параметр (писать будем из строки)*/
    movl $aa_st_name_len, %edx /*третий параметр (сколько будем писать)*/
    int $0x80 /*прерывание (кторое вызовет запись)*/   

    movl $1, %eax /*записываем в  первый общий регистр число 1 (номер системного выхова exit)*/
    movl $0, %ebx /*записываем во второй общий регистр число 0 (первый и единственный параметр - код возврата)*/
    
    int $0x80  /*вызывае прерывание*/
    
    .size main, . - main /*размер функции main*/


 
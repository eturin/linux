#include <iostream>
#include <omp.h>


int main(){
	/*параллельная секция*/
	#pragma omp parallel num_threads(7)
	{
		std::cout <<"Параллельный фрагмент\n";

		/*в критическую секцию будет заходить не более одного, а сотальные будут ждать свою очередь*/
		#pragma omp critical
		{
			std::cout<<"->Эта секция выполняется не параллельно\n";
		}

		std::cout <<"Снова параллельный фрагмент\n";

		/*опять критическая секция*/
		#pragma omp critical
		std::cout<<"Это тоже безымянная критическая секция. Если в нее входит поток, то дрцгие не могут войти и во все остальные безымянные критические секции\n";
		
		/*именованные критические секции могут выполняться уже одновременно друг с другом, если имена разные (но вложенные критические секции все еще могут вызвать взаимную блокировку)*/
		#pragma omp critical(first_name)  //в конце нет барьера синхронизации
		std::cout<<"Именованная секция first_name\n";

		#pragma omp critical(second_name) 
		{
			std::cout<<"Именованная секция second_name\n";
			/*#pragma omp critical(second_name) //это вызовет блокировку потока самим собой, т.к. зайдя в секцию с таким именем он уже её заблокировал
			std::cout<<"Именованная секция second_name\n";*/
		}

	}

	return 0;
}
